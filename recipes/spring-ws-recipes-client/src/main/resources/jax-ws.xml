<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cloud="http://schema.cloudfoundry.org/spring"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		    http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring.xsd">

    <!--
          Analogous to the JAX-RPC support, Spring provides two factory beans to create JAX-WS
          web service proxies, namely LocalJaxWsServiceFactoryBean and JaxWsPortProxyFactoryBean.
          The former can only return a JAX-WS service class for us to work with. The latter is the
          full-fledged version that can return a proxy that implements our business service interface.

          serviceInterface is our business interface the clients will use
          wsdlDocumentUrl is the URL for the WSDL file. Spring needs this a startup time to create the JAX-WS Service
          namespaceUri corresponds to the targetNamespace in the .wsdl file
          serviceName corresponds to the service name in the .wsdl file
          portName corresponds to the port name in the .wsdl file.

          See:
          19.5.8 Accessing web services using JAX-WS
          http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/remoting.html#remoting-web-services
          -->

    <beans profile="default">

        <bean id="recipeJaxProxyService" class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean"
              p:serviceInterface="com.rollingstone.recipes.oxm.RecipePort"
              p:wsdlDocumentUrl="http://localhost:8080/spring-ws-recipe/binit/ws/recipe.wsdl"
              p:namespaceUri="http://binit.blogspot.com/ws/schema/recipe"
              p:serviceName="RecipePortService"
              p:portName="RecipePortSoap11"/>

    </beans>

    <!--
              p:wsdlDocumentUrl="${wsdl.document.url}"
    -->

    <beans profile="cloud">

        <bean id="recipeJaxProxyService" class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean"
              p:serviceInterface="com.rollingstone.recipes.oxm.RecipePort"
              p:wsdlDocumentUrl="#{systemEnvironment.WSDL_DOCUMENT_URL}"
              p:namespaceUri="#{systemEnvironment.TARGET_NAMESPACE_URI}"
              p:serviceName="RecipePortService"
              p:portName="RecipePortSoap11"/>

    </beans>

</beans>